@model IdentityServer.ViewModels.Administration.ManageRolesUserViewModel
@{
    ViewData["Title"] = "Gérer les rôles de l'utilisateur";
    var userId = ViewBag.userId;
    var returnUrl = ViewBag.returnUrl;
}



@using (Html.BeginForm(FormMethod.Post))
{
    <div class="card">
        <div class="card-header">
            <h2>Gérer les rôles de l'utilisateur</h2>
        </div>
        <div class="card-body">

            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.userId)

            <table class="table table-striped" id="myTable">
                <thead>
                    <tr>
                        <th class="text-center">Attribuer le rôle</th>
                        <th class="NomColonne" id="0">Nom du rôle</th>
                        <th>Description</th>
                        <th class="NomColonne text-center" id="1">Accès complet</th>
                        <th class="NomColonne text-center" id="2">Accès partiel</th>
                        <th class="text-center">Modifier l'accès de l'utilisateur</th>
                    </tr>
                </thead>
                <tbody>


                    @for (int i = 0; i < Model.lRoles.Count; i++)
                    {
                        <tr>
                            <td class="text-center">@Html.EditorFor(model => model.lRoles[i].isSelected)</td>
                            <td>@Html.Label("", Model.lRoles[i].RoleName)</td>
                            <td>@if (Model.lRoles[i].RoleDescription != null)
                                { @Html.Label("",Model.lRoles[i].RoleDescription)}
                            </td>
                            <td class="text-center">@Html.DisplayFor(model => model.lRoles[i].isFullAcces)</td>
                            <td class="text-center">@Html.DisplayFor(model => model.lRoles[i].isPartialAccess)</td>
                            <td class="text-center">
                                @if (Model.lRoles[i].isEditable && Model.lRoles[i].isSelected)
                                {
                                    @Html.ActionLink("Modifier", "EditScopeRole", "AdministrationUsers", new { userId = Model.userId, roleId = Model.lRoles[i].RoleId }, new { @class = "btn btn-primary" })
                                }

                                @Html.HiddenFor(model => model.lRoles[i].RoleId)
                                @Html.HiddenFor(model => model.lRoles[i].RoleName)
                                @Html.HiddenFor(model => model.lRoles[i].RoleDescription)
                                @Html.HiddenFor(model => model.lRoles[i].isPartialAccess)
                                @Html.HiddenFor(model => model.lRoles[i].isFullAcces)
                                @Html.HiddenFor(model => model.lRoles[i].isEditable)

                            </td>
                        </tr>
                    }


                </tbody>
            </table>
        </div>

        <div class="card-footer">
            <button style="width:auto" type="submit" name="button" value="update" class="btn btn-success">Mettre à jour l'utilisateur</button>
            @Html.ActionLink("Retour à la liste des utilisateurs", "ListeUsers", "AdministrationUsers", new { userId = userId, returnUrl = returnUrl }, new { @class = "btn btn-danger" })
        </div>
    </div>

}

@section Scripts{
    <script src="~/js/site.js"></script>
}